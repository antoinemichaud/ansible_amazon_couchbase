---
# reste : version ubuntu pour l'installation des paquets, transparent huge pages, ulimit, swappiness, passage en paramètre des hostsname dans le template (attention aux routes 53 !)
# eventuellement : association avec route 53, clean parameters, add login password, mettre à jour les noeuds et les redémarrer pour la sécurité
# ansible_os_family i/o ansible_distribution
- name: download Couchbase package (Red hat)
  get_url: "url=http://packages.couchbase.com/releases/3.0.1/couchbase-server-community-3.0.1-centos6.x86_64.rpm
  dest=~/couchbase-server-community-3.0.1-centos6.x86_64.rpm"
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install dependencies (Red hat)
  yum: name=openssl state=present
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install Couchbase .rpm file on all machines (Red hat)
  yum: name=/home/ec2-user/couchbase-server-community-3.0.1-centos6.x86_64.rpm state=present
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  sudo: yes

- name: download Couchbase package (Ubuntu)
  get_url: "url=http://packages.couchbase.com/releases/3.0.1/couchbase-server-community_3.0.1-ubuntu12.04_amd64.deb
  dest=~/couchbase-server-community_3.0.1-ubuntu12.04_amd64.deb"
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Install dependencies (Ubuntu)
  apt: name=openssl state=present
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Install Couchbase .deb file on all machines (Ubuntu)
  apt: deb=/home/ubuntu/couchbase-server-community_3.0.1-ubuntu12.04_amd64.deb
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
  sudo: yes

- name: Create file system on EBS volume (Redhat)
  filesystem:
    fstype: ext4
    dev: "/dev/sdf"
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  sudo: yes

- name: Mount EBS volume (Redhat)
  mount:
    name: /mnt/couchbase-data
    fstype: ext4
    src: /dev/sdf
    state: mounted
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  sudo: yes

- name: Create file system on EBS volume (Ubuntu)
  filesystem:
    fstype: ext4
    dev: "/dev/xvdf"
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
  sudo: yes

- name: Mount EBS volume (Ubuntu)
  mount:
    name: /mnt/couchbase-data
    fstype: ext4
    src: /dev/xvdf
    state: mounted
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
  sudo: yes

- name: Make couchbase owner of EBS volume
  file: path=/mnt/couchbase-data group=couchbase owner=couchbase mode=0744 state=directory
  sudo: yes

- name: Start couchbase-server
  service: name=couchbase-server state=started
  sudo: yes

- name: Wait for Couchbase API availability on nodes
  wait_for: delay=3 timeout=60 port=8091

- name: Check data storage configuration
  shell: "/opt/couchbase/bin/couchbase-cli server-info -c localhost:8091 -u Administrator -p password"
  register: couchbase_config_json

- set_fact:
   couchbase_config: "{{ couchbase_config_json.stdout }}"

- name: Configure Couchbase to use EBS volume
  shell: "sudo /opt/couchbase/bin/couchbase-cli node-init -c localhost:8091 -u Administrator
  -p password --node-init-data-path=/mnt/couchbase-data --node-init-index-path=/mnt/couchbase-data"
  when: '"/mnt/couchbase-data" not in couchbase_config.availableStorage.hdd'
